{"version":3,"sources":["audio/sound.mp3","timer/index.js","timer/Timer.jsx","countdown/EnterTime.jsx","countdown/PrintResult.jsx","countdown/index.js","countdown/Countdown.jsx","app/App.jsx","index.jsx"],"names":["module","exports","Timer","props","changeTime","value","state","prev","open","startTime","all","Date","now","date","min","getMinutes","sec","getSeconds","ms","getMilliseconds","setState","time","requestAnimationFrame","toggleTimer","evt","preventDefault","printTextOnButton","resetTimer","this","className","onClick","React","Component","EnterTime","giveTime","getTime","sliderChange","Math","floor","minChange","secChange","close","onChange","disabled","max","step","defaultProps","first","PrintResult","percent","diff","currentTime","round","type","Countdown","work","setTimeout","Audio","sound","play","startCountDown","toggleCountDown","resetCountDown","TabPane","Tabs","App","tab","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a4d062.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound.76b2ec11.mp3\";","import Timer from './Timer';\r\nexport default Timer;","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport './timer.scss';\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: { all: 0, min: 0, sec: 0, ms: 0 },\r\n      open: true,\r\n      startTime: 0,\r\n      printTextOnButton: 'Run',\r\n      prev: 0,\r\n    };\r\n  }\r\n\r\n  changeTime = value => {\r\n    const { prev, open } = this.state;\r\n    const diff = value - prev;\r\n    if (diff > 150 && !open) {\r\n      const { startTime } = this.state;\r\n      const all = Date.now() - startTime; // получаем разницу между началом и текущим временем\r\n      const date = new Date(all); // создаем объект дата чтобы получить мин сек и мс\r\n      const min = date.getMinutes(); // получаем мин\r\n      const sec = date.getSeconds(); // получаем сек\r\n      const ms = date.getMilliseconds(); // получаем мс\r\n      this.setState({ time: { all, min, sec, ms }, prev: value }); // меняем стейт на новый\r\n    }\r\n    if (!open) {\r\n      requestAnimationFrame(this.changeTime);\r\n    }\r\n  };\r\n\r\n  toggleTimer = evt => {\r\n    evt.preventDefault();\r\n    const { open, time } = this.state;\r\n    if (open) {\r\n      requestAnimationFrame(this.changeTime);\r\n      this.setState({\r\n        startTime: Date.now() - time.all,\r\n        open: false,\r\n        printTextOnButton: 'Pause',\r\n      });\r\n    } else {\r\n      this.setState({ open: true, printTextOnButton: 'Run', prev: 0 });\r\n    }\r\n  };\r\n\r\n  resetTimer = evt => {\r\n    evt.preventDefault();\r\n    this.setState({\r\n      time: { min: 0, sec: 0, ms: 0, all: 0 },\r\n      open: true,\r\n      printTextOnButton: 'Run',\r\n      prev: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { time, printTextOnButton } = this.state;\r\n    return (\r\n      <div className=\"timer\">\r\n        <ul className=\"timer__list\">\r\n          <li className=\"timer__item\">\r\n            <span>min</span>\r\n            <span>{time.min}</span>\r\n          </li>\r\n          <li className=\"timer__item\">\r\n            <span>sec</span>\r\n            <span>{time.sec}</span>\r\n          </li>\r\n          <li className=\"timer__item\">\r\n            <span>ms</span>\r\n            <span>{time.ms}</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"btn-group\">\r\n          <Button className=\"btn--timer\" onClick={this.toggleTimer}>\r\n            {printTextOnButton}\r\n          </Button>\r\n          <Button className=\"btn--timer\" onClick={this.resetTimer}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Slider, InputNumber } from 'antd';\r\n\r\nclass EnterTime extends React.Component {\r\n  giveTime = (min, sec) => {\r\n    const { getTime } = this.props;\r\n    getTime(min, sec);\r\n  };\r\n\r\n  sliderChange = value => {\r\n    const min = Math.floor(value / 60); // округляем до минут\r\n    const sec = value - min * 60; // получаем секунды\r\n    this.giveTime(min, sec);\r\n  };\r\n\r\n  minChange = min => {\r\n    const { sec } = this.props; // получаем секунды из стейта\r\n    this.giveTime(min, sec);\r\n  };\r\n\r\n  secChange = sec => {\r\n    const { min } = this.props; // получаем минуты из стейта\r\n    this.giveTime(min, sec);\r\n  };\r\n\r\n  render() {\r\n    const { min, sec } = this.props;\r\n    const { close } = this.props;\r\n    return (\r\n      <div>\r\n        MIN\r\n        <InputNumber value={min} onChange={this.minChange} disabled={close} max={720} min={0} />\r\n        SEC\r\n        <InputNumber value={sec} onChange={this.secChange} disabled={close} max={59} min={0} />\r\n        <Slider\r\n          value={min * 60 + sec}\r\n          onChange={this.sliderChange}\r\n          disabled={close}\r\n          step={15}\r\n          min={0}\r\n          max={3600}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnterTime.defaultProps = {\r\n  min: 0,\r\n  sec: 0,\r\n  close: false,\r\n};\r\n\r\nEnterTime.propTypes = {\r\n  min: PropTypes.number,\r\n  sec: PropTypes.number,\r\n  close: PropTypes.bool,\r\n  // eslint-disable-next-line react/require-default-props\r\n  getTime: PropTypes.func,\r\n};\r\n\r\nexport default EnterTime;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Progress } from 'antd';\r\n\r\nimport './countdown.scss';\r\n\r\nlet first;\r\nconst PrintResult = props => {\r\n  const { startTime, currentTime } = props;\r\n  const diff = startTime - currentTime;\r\n  let percent;\r\n  let min = 0;\r\n  let sec = 0;\r\n  let ms = 0;\r\n\r\n  if (!first) {\r\n    first = diff;\r\n  }\r\n  if (startTime === 0) {\r\n    percent = 0;\r\n  } else {\r\n    percent = 100 - Math.round((diff / first) * 100);\r\n    const time = new Date(diff);\r\n    min = time.getMinutes();\r\n    sec = time.getSeconds();\r\n    ms = time.getMilliseconds();\r\n  }\r\n\r\n  return (\r\n    <div className=\"result-countdown\">\r\n      <div>\r\n        Time to end {min} : {sec}: {ms}\r\n      </div>\r\n      <Progress type=\"circle\" percent={percent} />\r\n    </div>\r\n  );\r\n};\r\n\r\nPrintResult.defaultProps = {\r\n  startTime: 0,\r\n  currentTime: 0,\r\n};\r\n\r\nPrintResult.propTypes = {\r\n  startTime: PropTypes.number,\r\n  currentTime: PropTypes.number,\r\n};\r\n\r\nexport default PrintResult;\r\n","import Countdown from './Countdown';\r\nexport default Countdown;","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport EnterTime from './EnterTime';\r\nimport PrintResult from './PrintResult';\r\n\r\nimport sound from '../audio/sound.mp3';\r\n\r\nimport './countdown.scss';\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: 0,\r\n      startTime: 0,\r\n      currentTime: 0,\r\n      close: false,\r\n      work: false,\r\n      printTextOnButton: 'Run',\r\n      min: 0,\r\n      sec: 0,\r\n    };\r\n  }\r\n\r\n  getTime = (min, sec) => {\r\n    const { close } = this.state;\r\n    if (!close) {\r\n      const time = min * 60 + sec;\r\n      this.setState({ time: time * 1000, min, sec });\r\n    }\r\n  };\r\n\r\n  changeTime = () => {\r\n    const { startTime, currentTime, work } = this.state;\r\n    if (startTime > currentTime && work) {\r\n      this.setState({ currentTime: Date.now() });\r\n      setTimeout(() => this.changeTime(), 1000);\r\n    } else if (startTime <= currentTime) {\r\n      const audio = new Audio(sound);\r\n      audio.play();\r\n      this.setState({\r\n        currentTime: 0,\r\n        startTime: 0,\r\n        close: false,\r\n        work: false,\r\n        time: 0,\r\n        printTextOnButton: 'Run',\r\n        min: 0,\r\n        sec: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  startCountDown = () => {\r\n    const { time } = this.state;\r\n    const currentTime = Date.now();\r\n    const startTime = currentTime + time;\r\n\r\n    this.setState(\r\n      {\r\n        close: true,\r\n        work: true,\r\n        startTime,\r\n        currentTime,\r\n        printTextOnButton: 'Pause',\r\n      },\r\n      () => this.changeTime()\r\n    );\r\n  };\r\n\r\n  toggleCountDown = evt => {\r\n    evt.preventDefault();\r\n    const { work, startTime, currentTime } = this.state;\r\n    if (!work) {\r\n      this.startCountDown();\r\n    } else {\r\n      this.setState({ work: false, time: startTime - currentTime, printTextOnButton: 'Run' });\r\n    }\r\n  };\r\n\r\n  resetCountDown = evt => {\r\n    evt.preventDefault();\r\n    this.setState({\r\n      close: false,\r\n      work: false,\r\n      startTime: 0,\r\n      currentTime: 0,\r\n      time: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      printTextOnButton: 'Run',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { close, min, sec, printTextOnButton, startTime, currentTime } = this.state;\r\n    return (\r\n      <div className=\"countdown\">\r\n        <EnterTime getTime={this.getTime} close={close} min={min} sec={sec} />\r\n        <div className=\"btn-countdown\">\r\n          <Button onClick={this.toggleCountDown}>{printTextOnButton}</Button>\r\n          <Button onClick={this.resetCountDown}>Reset</Button>\r\n        </div>\r\n        <br />\r\n        <PrintResult startTime={startTime} currentTime={currentTime} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Timer from '../timer';\r\nimport Countdown from '../countdown';\r\n\r\nimport './app.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst App = () => (\r\n  <Tabs type=\"card\">\r\n    <TabPane tab=\"Timer\" key=\"1\">\r\n      <Timer />\r\n    </TabPane>\r\n    <TabPane tab=\"Countdown\" key=\"2\">\r\n      <Countdown />\r\n    </TabPane>\r\n  </Tabs>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}